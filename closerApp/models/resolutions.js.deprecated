$.Model.extend('Closer.Models.Resolutions',
/* @Static */
{
	errorHandler: "error",
	basePath: '/rest/resolutions/types',
	// typesPath: '/rest/resolutions/types'
	// 
	resolutionTypes:false,

	findAll: function( params, success, error ) {
		if ( Closer.Controllers.Application.settings.liveData ) {
			$.ajax({
				url: Closer.Controllers.Application.settings.dataUrl + this.basePath,
				type: 'get',
				dataType: 'json',
				success: this.callback(['wrapMany', 'setResolutions', success]),
				error: this.callback([this.errorHandler, error])
			});
		} else {
			
		}
	},

	setResolutions: function( data ){
		this.resolutionTypes = data;
	},

	filterResolutionGroups:function( params ){
		var resolutionTypes = new Array();

		$.each(this.resolutionTypes, function(k,v){
			if( v.getGroups() === params.group ) {
				resolutionTypes.push(v);
			}
		});

		return resolutionTypes;
	},


	getResolutionByName:function(){

		// var 

		if( !this.resolutionTypes ){
			this.findAll({});
		}
	},

	error: function(xhr, status, error) {

		OpenAjax.hub.publish('error.display', { error: error });
		OpenAjax.hub.publish("loading.destroy");
		Closer.Controllers.Application.processing = false;	
	}
},
/* @Prototype */
{
	init: function() {
	},

	getName: function(){ return this.name;	},
	getID: function(){ return this.id;	},
	getGroups: function(){ return this.groups;	},
	getCode: function(){ return this.code;	},
	getOrdinal:function(){ return this.ordinal; },
	getActive:function(){ return this.active; }
});

